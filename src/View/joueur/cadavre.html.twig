{% extends 'layout.html.twig' %}
{% block title %}Réalisation d'une contribution
	{{parent()}}
{% endblock %}
{% block content %}

		<header class="admin">
			<div class="header">
				<div class="header__logo">
					<?xml version="1.0" encoding="UTF-8"?>
					<svg id="Calque_1" data-name="Calque 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 248 248">
					<defs>
						<style>
						svg {
							width:20%;
						}
						.cls-1 {
							fill: #fefffe;
						}

						.cls-1, .cls-2 {
							stroke-width: 0px;
						}

						.cls-2 {
							fill: #101a31;
						}
						</style>
					</defs>
					<circle class="cls-2" cx="124" cy="124" r="124"/>
					<path class="cls-1" d="m96,46h21.68l-10.84,58.78s-5.84,22.22,14.16,23.22c0,0,19,3,26-15l10-46h-24s6.37-21,22.18-21h27.64l-11.83,62s-4,22-34,47l-46-10s-7-17-7-23c0,0-3-20,12-76Z"/>
					<polygon class="cls-1" points="93 156 104 187 128 164 93 156"/>
					<path class="cls-1" d="m111,202s6,31,30,10c0,0,42-45,59-50,0,0,22-8,39,12l-3,6s-21-23-44-6c0,0-25,21-31,29,0,0-25,32-46,23,0,0-13-4-12-23,0,0,3-7,8-1Z"/>
					</svg>
					<a href="/joueur/{{ id }}"><h1>Loufok</h1></a>
                    <a class="disconnect" href="/disconnect"> <span class="material-icons">logout</span> </a>
				</div>
			</div>
		</header>

    <section class="contribution">

        <h2 class="contribution__title"> Cadavre Exquis {{ contributions.0.id_cadavre }} </h2>

        {% set contributionsMap = {} %}
        {% set idcadavre = contributions.0.id_cadavre %}
        {% set lastOrdreSoumission = 0 %}

        {% for contribution in contributions %}
            {% if contribution.ordre_soumission > lastOrdreSoumission %}
                {% set lastOrdreSoumission = contribution.ordre_soumission %}
            {% endif %}
        {% endfor %}

        {% set nextOrdreSoumission = lastOrdreSoumission + 1 %}

        {% for contributionVisible in contributionAleatoire %}
            {% set contributionsMap = contributionsMap|merge({(contributionVisible.num_contribution): contributionVisible.texte_contribution}) %}
        {% endfor %}

        {% for contribution in contributions %}
            <div class="contribution__div">
                <p class="contribution__div--title"> Contribution n° {{ contribution.ordre_soumission }} </p>
                {% for contributionVisible in contributionAleatoire %}
                    {% if contribution.ordre_soumission == contributionVisible.num_contribution %}
                        <span id="off" class="material-icons hidden">visibility_off</span>
                        <span id="on" class="material-icons">visibility</span>
                        <p class="contribution__div--txt">{{ contributionVisible.texte_contribution }}</p>
                    {% endif %}
                {% endfor %}
            </div>
        {% endfor %}

        {% if hiscontribution %}
            <h3> Votre contribution : </h3>
            <p>{{ hiscontribution.texte_contribution }} <span class="num__contribution"> (Contribution n° {{ hiscontribution.ordre_soumission }}) </span></p>
        {% else %}
            <form class="section__form" action="{{ url('/joueur/contribution/' ~ id ~ '/' ~ idcadavre) }}" method="post">
                <input type="hidden" name="ordreSoumission" value="{{ nextOrdreSoumission }}">
                <label for="texteContribution"> Contribution </label>
                <textarea placeholder="Vous avez entre 50 et 280 caractères d'autorisées" name="texteContribution" required></textarea>
                <span id="compteur">0/280</span>
                <button class="button button__disabled" type="submit" disabled>Valider</button>
            </form>
        {% endif %}

    </section>

{% block scripts %}
<script>
  // Sélectionnez les éléments par leur classe CSS
  const pElement = document.querySelector('.contribution__div--txt');
  const visibilityOffIcon = document.getElementById('off');
  const visibilityIcon = document.getElementById('on');

  // Ajoutez un gestionnaire d'événements de clic à l'icône visibility_off
  visibilityOffIcon.addEventListener('click', function() {
    // Basculez entre les classes hidden et show sur l'élément p
    pElement.classList.toggle('hidden');
    pElement.classList.toggle('show');
    
    // Basculez les classes hidden sur les icônes
    visibilityOffIcon.classList.add('hidden');
    visibilityIcon.classList.remove('hidden');
  });

  // Ajoutez un gestionnaire d'événements de clic à l'icône visibility
  visibilityIcon.addEventListener('click', function() {
    // Basculez entre les classes hidden et show sur l'élément p
    pElement.classList.add('hidden');
    pElement.classList.remove('show');
    
    // Basculez les classes hidden sur les icônes
    visibilityOffIcon.classList.remove('hidden');
    visibilityIcon.classList.add('hidden');
  });

  const textarea = document.querySelector('textarea');
  const compteurCaracteres = document.querySelector('#compteur');
  const btnValider = document.querySelector('.button');

  // Gérez l'événement d'entrée (input) dans le textarea
  textarea.addEventListener('input', function () {
    // Obtenez le contenu du textarea
    const contenuTextarea = textarea.value;

    // Comptez le nombre de caractères (en excluant les espaces)
    const nombreCaracteres = contenuTextarea.replace(/\s/g, '').length;

    // Mise à jour du compteur de caractères
    compteurCaracteres.textContent = `${nombreCaracteres}/280`;

    // Mettez le compteur en rouge si le nombre de caractères est en dehors de la plage 50-280
    if (nombreCaracteres < 50 || nombreCaracteres > 280 || nombreCaracteres === 0) {
      compteurCaracteres.style.color = 'red';
      btnValider.classList.remove('button__validate');
      btnValider.classList.add('button__disabled');
      btnValider.setAttribute('disabled', true);
    } else {
      compteurCaracteres.style.color = 'black';
      btnValider.classList.remove('button__disabled');      
      btnValider.classList.add('button__validate');
      btnValider.removeAttribute('disabled');
    }
  });
</script>

{% endblock %}
{% endblock %}
